{
  "name": "slick",
  "description": "Slick, the most awesome CSS Parser and Finder",
  "url": "http://mootools.github.com/slick",
  "keywords": [
    "util",
    "dom",
    "css",
    "selector",
    "parser",
    "mootools"
  ],
  "author": {
    "name": "Fabio Miranda Costa"
  },
  "contributors": [
    {
      "name": "Valerio Proietti"
    },
    {
      "name": "Thomas Aylott"
    },
    {
      "name": "Jan Kassens"
    }
  ],
  "dependencies": {},
  "lib": "Source",
  "main": "./Source/slick.js",
  "version": "1.0.0",
  "readme": "(Slick is an official [MooTools](http://mootools.net) project)\n\nSlick\n=====\nA new standalone selector engine that is totally slick!\n-------------------------------------------------------\n\n### Create your own custom pseudo-classes!\nEver want to make your own `:my-widget(rocks)` pseudoclass? Now you can!\n\n### Use your own custom getAttribute code!\nEG: Use MooTool's Element.get method or jQuery's $.attr\n\n### Use your own parser!\nWant to support XPATH selectors? JSONPath selectors? Pre-cached JS Object selctors? Just swap out the default parser and make your own.\n\n### Use the parser by itself!\nWant to integrate a CSS3 Selector parser into your own app somehow? Use the slick selector CSS3 parser by itself and get a JS Object representation of your selector.\n\n---\n\nSlick Selector Engine\n=====================\n\nUsage\n-----\n\n### `search` context for selector\nSearch this context for any nodes that match this selector.\n\nExpects: \n* context: document or node or array of documents or nodes\n* selector: String or SelectorObject\n* (**optional**) append: Array or Object with a push method\n\nReturns: append argument or Array of 0 or more nodes\n\n\tSlick.search(document, \"#foo > bar.baz\") → [<bar>, <bar>, <bar>]\n\tSlick.search([<ol>, <ul>], \"li > a\") → [<a>, <a>, <a>]\n\tSlick.search(document, \"#foo > bar.baz\", { push:function(){} }) → { push:function(){}, 0:<bar>, 1:<bar>, 2:<bar> }\n\n\n### `find` first in context with selector or null\nFind the first node in document that matches selector or null if none are found.\n\nExpects:\n* context: document or node or array of documents or nodes\n* selector: String or SelectorObject\n\nReturns: Element or null\n\n\tSlick.find(document, \"#foo > bar.baz\") → <bar>\n\tSlick.find(node, \"#does-not-exist\") → null\n\n\n### node `match` selector?\nDoes this node match this selector?\n\nExpects:\n* node\n* node, String or SelectorObject\n\nReturns: true or false\n\n\tSlick.match(<div class=rocks>, \"div.rocks\") → true\n\tSlick.match(<div class=lame>, \"div.rocks\") → false\n\tSlick.match(<div class=lame>, <div class=rocks>) → false\n\n\n### context `contains` node?\nDoes this context contain this node? Is the context a parent of this node?\n\nExpects:\n* context: document or node\n* node: node\n\nReturns: true or false\n\n\tSlick.contains(<ul>, <li>) → true\n\tSlick.contains(<body>, <html>) → false\n\n\n---\n\n\nSlick CSS Selector Parser\n=========================\nParse a CSS selector string into a JavaScript object\n----------------------------------------------------\n\nUsage\n-----\n\n### `parse` selector into object\nParse a CSS Selector String into a Selector Object.\n\nExpects: String\n\nReturns: SelectorObject\n\n\tSlick.parse(\"#foo > bar.baz\") → SelectorObject\n\n\nSelectorObject format\n---------------------\n\n### `#foo > bar.baz`\n\n\t{\n\t\t\"raw\":\"#foo > bar.baz\",\n\t\t\"expressions\": [[\n\t\t\t{ \"combinator\":\" \", \"tag\":\"*\", \"id\":\"foo\" },\n\t\t\t{ \"combinator\":\">\", \"tag\":\"bar\", \"classList\": [\"baz\"], \"classes\": [{\"value\":\"baz\", \"regexp\":RegExp }]}\n\t\t]]\n\t}\n\n### `h1, h2, ul > li, .things`\n\n\t{\n\t\t\"raw\": \"h1, h2, ul > li, .things\",\n\t\t\"expressions\": [\n\t\t\t[{ \"combinator\":\" \", \"tag\": \"h1\" }],\n\t\t\t[{ \"combinator\":\" \", \"tag\": \"h2\" }],\n\t\t\t[{ \"combinator\":\" \", \"tag\": \"ul\" }, { \"combinator\": \">\", \"tag\": \"li\" }],\n\t\t\t[{ \"combinator\":\" \", \"tag\": \"*\", \"classList\": [\"things\"], \"classes\": [{\"value\": \"things\", \"regexp\":RegExp }] }]\n\t\t]\n\t}\n",
  "readmeFilename": "README.md",
  "_id": "slick@1.0.0",
  "dist": {
    "shasum": "38accd59b61ffa6613ea949880637772686957d1"
  },
  "_from": "slick@1.0",
  "_resolved": "https://registry.npmjs.org/slick/-/slick-1.0.0.tgz"
}
